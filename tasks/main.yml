---

- name: Check profile exists
  command: grep "Name=default" ~/.mozilla/firefox/profiles.ini
  register: grep_profile
  changed_when: false

- name: Ensure profile exists
  shell: firefox -no-remote -CreateProfile default 2>&1
  register: create_profile 
  changed_when: grep_profile.rc > 0

- name: Parse profile path
  shell: sed -n -r "s/Success\x3a created profile '(.+)' at '(.+)'/\2/p" <<< "{{ create_profile.stdout }}" | xargs dirname 
  register: create_profile_parsed
  changed_when: false

- set_fact:
    firefox_profile: '{{ create_profile_parsed.stdout }}'

- name: Install user addons
  firefox_addon:
    url: '{{ item.url }}'
    profile: '{{ firefox_profile }}'
  with_items: firefox.addons

# selectattr in with_subelements is a workaround since skip_missing is not available until Ansible 2.0
# http://stackoverflow.com/questions/24616107/ansible-with-subelements-default-value
# https://github.com/ansible/ansible/issues/9827
- name: Install user addon prefs
  lineinfile:
    dest: '{{ firefox_profile }}/user.js'
    create: yes
    regexp: '^user_pref\("{{ item.1.name }}",\s*\S+?\);\s*$'
    line: 'user_pref("{{ item.1.name }}", {{ ("\"%s\"" | format(item.1.value)) if item.1.value is string else (item.1.value | lower) }});'
  with_subelements:
    - '{{ firefox.addons | selectattr("prefs", "defined") | list }}'
    - prefs

- name: Install user styles
  lineinfile:
    dest: '{{ firefox_profile }}/chrome/userChrome.css'
    create: yes
    line: '@import url("{{ item }}");'
    insertbefore: BOF
  with_items: firefox.styles

# TODO copy over the initial ui customisations

- name: Parse existing ui customisations
  shell: 
    grep -q -s browser.uiCustomization.state {{ firefox_profile }}/user.js && exec 3<{{ firefox_profile }}/user.js || 
    exec 3<{{ firefox_profile }}/prefs.js; 
    <&3 sed -n -r 's/user_pref\("browser.uiCustomization.state", "(.*)"\);/\1/p' | sed -r 's/\\"/"/g' > /tmp/ui_customisation_0
  changed_when: false

- name: Prepare modified ui customisations
  shell: 
    < /tmp/ui_customisation_{{ item.0 }}
    jq -c --arg placement {{ item.1.placement }} --arg item {{ item.1.item }} --arg before_item '{{ item.1.before_item | default() }}' 
    'select(.placements[$placement] | index($item)) // .placements[$placement] |= ([0, index($before_item)] | max) as $before_index | (.[:$before_index] + [$item] + .[$before_index:])' | tee /tmp/ui_customisation_{{ item.0 + 1}}
  with_indexed_items: firefox.ui_customisations
  register: ui_customisations_prepared
  changed_when: false

- debug: msg={{ ui_customisations_prepared.results[-1].stdout }}

# TODO write json string properly escaped

- name: Install modified ui customisations
  lineinfile:
    dest: '{{ firefox_profile }}/user.js'
    create: yes
    regexp: '^user_pref\("browser.uiCustomization.state",\s*\S+?\);\s*$'
    line: 'user_pref("browser.uiCustomization.state", {{ ui_customisations_prepared.results[-1].stdout }});'

